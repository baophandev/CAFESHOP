/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package caitiemcafe;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.DefaultCellEditor;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;

/**
 *
 * @author GIA BAO
 */
public class PanelTongQuan extends javax.swing.JPanel {

    /**
     * Creates new form PanelTongQuan
     */
    public PanelTongQuan() {
        initComponents();
        tableTongQuan.setModel(model);
        tableDetail.setModel(modelDetail);
        
        TableColumn detailColumn = tableTongQuan.getColumnModel().getColumn(8);
        detailColumn.setCellRenderer(new ButtonRenderer());
        detailColumn.setCellEditor(new ButtonEditor(new JCheckBox()));
        
        //SET ICON CHO CHƯƠNG TRÌNH
        String iconPath = "D:\\Java Project\\CaiTiemCafe\\src\\caitiemcafe\\Image\\White_and_Brown_Elegant_Simple_Boba_Drink_Logo-removebg-preview.png";
        ImageIcon icon = new ImageIcon(iconPath);
        billDetail.setIconImage(icon.getImage());

        tableTongQuan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                int col = tableTongQuan.getColumnModel().getColumnIndexAtX(evt.getX());
                int row = evt.getY() / tableTongQuan.getRowHeight();
                
                // Kiểm tra xem cột được nhấp có phải là cột "Chi tiết" hay không
                if (row >= 0 && col == 8) {
                    String so = model.getValueAt(row, 0).toString();
                    loadDatatoSanPham(so);
                    billDetail.setVisible(true);
                    billDetail.pack();
                    billDetail.setLocationRelativeTo(null);
                }
            }
        });
        
 
        loadDatatoTable();
        calDoanhThu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        billDetail = new javax.swing.JDialog();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableDetail = new javax.swing.JTable();
        pnTongQuan = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableTongQuan = new javax.swing.JTable();
        btnHomNay = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        btnThangNay = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableTotal = new javax.swing.JTable();

        billDetail.setBackground(new java.awt.Color(255, 255, 255));

        tableDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableDetail.setEnabled(false);
        jScrollPane3.setViewportView(tableDetail);

        javax.swing.GroupLayout billDetailLayout = new javax.swing.GroupLayout(billDetail.getContentPane());
        billDetail.getContentPane().setLayout(billDetailLayout);
        billDetailLayout.setHorizontalGroup(
            billDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        billDetailLayout.setVerticalGroup(
            billDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setBackground(new java.awt.Color(255, 255, 255));

        pnTongQuan.setBackground(new java.awt.Color(255, 255, 255));

        tableTongQuan.setForeground(new java.awt.Color(0, 102, 102));
        tableTongQuan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableTongQuan.setEnabled(false);
        tableTongQuan.setRowHeight(20);
        jScrollPane1.setViewportView(tableTongQuan);

        btnHomNay.setBackground(new java.awt.Color(0, 153, 51));
        btnHomNay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnHomNayMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnHomNayMouseEntered(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("HÔM NAY");

        javax.swing.GroupLayout btnHomNayLayout = new javax.swing.GroupLayout(btnHomNay);
        btnHomNay.setLayout(btnHomNayLayout);
        btnHomNayLayout.setHorizontalGroup(
            btnHomNayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnHomNayLayout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        btnHomNayLayout.setVerticalGroup(
            btnHomNayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnHomNayLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        btnThangNay.setBackground(new java.awt.Color(0, 102, 102));
        btnThangNay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnThangNayMouseClicked(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("THÁNG NÀY");

        javax.swing.GroupLayout btnThangNayLayout = new javax.swing.GroupLayout(btnThangNay);
        btnThangNay.setLayout(btnThangNayLayout);
        btnThangNayLayout.setHorizontalGroup(
            btnThangNayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnThangNayLayout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addComponent(jLabel5)
                .addContainerGap(87, Short.MAX_VALUE))
        );
        btnThangNayLayout.setVerticalGroup(
            btnThangNayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnThangNayLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        tableTotal.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        tableTotal.setForeground(new java.awt.Color(0, 153, 153));
        tableTotal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "--", "--"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableTotal.setRowHeight(30);
        tableTotal.setRowSelectionAllowed(false);
        jScrollPane2.setViewportView(tableTotal);

        javax.swing.GroupLayout pnTongQuanLayout = new javax.swing.GroupLayout(pnTongQuan);
        pnTongQuan.setLayout(pnTongQuanLayout);
        pnTongQuanLayout.setHorizontalGroup(
            pnTongQuanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1304, Short.MAX_VALUE)
            .addGroup(pnTongQuanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnTongQuanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnHomNay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnThangNay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnTongQuanLayout.setVerticalGroup(
            pnTongQuanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTongQuanLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnTongQuanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnTongQuanLayout.createSequentialGroup()
                        .addComponent(btnHomNay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnThangNay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(103, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1316, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnTongQuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 880, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnTongQuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnHomNayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHomNayMouseClicked
        // TODO add your handling code here:
        SimpleDateFormat dateFormat = new SimpleDateFormat("EEEE dd/MM/yyyy");
        Date currentDay = new Date();
        String formattedDate = dateFormat.format(currentDay);
        loadDatatoTableHomNay(formattedDate);
        calDoanhThu();
    }//GEN-LAST:event_btnHomNayMouseClicked

    private void calDoanhThu(){
        int total = 0;
        int totalThanhToan = 0;
        int totalTienGiam = 0;
        int totalTienKhachDua = 0;
        int totalTienTraLai = 0;
        
        //Tinh1h tổng
        for(int i=0; i < model.getRowCount(); i++){
            try{
                int rowTotal = Integer.parseInt(model.getValueAt(i, 3).toString());
                total += rowTotal; 
                int rowTotalTienGiam = Integer.parseInt(model.getValueAt(i, 4).toString());
                totalTienGiam += rowTotalTienGiam; 
                int rowTotalThanhToan = Integer.parseInt(model.getValueAt(i, 5).toString());
                totalThanhToan += rowTotalThanhToan; 
                int rowTotalTienKhachDua = Integer.parseInt(model.getValueAt(i, 6).toString());
                totalTienKhachDua += rowTotalTienKhachDua;
                int rowTotalTienTraLai = Integer.parseInt(model.getValueAt(i, 7).toString());
                totalTienTraLai += rowTotalTienTraLai;
                
            }catch(Exception ex){
                System.out.println("Gía trị không hợp lệ");
            }
        }
        
        // Hiển thị tổng với định dạng số có dấu phẩy
        DecimalFormat decimalFormat = new DecimalFormat("#,##0");
        
        tableTotal.setValueAt("Tổng", 0, 0);
        tableTotal.setValueAt(decimalFormat.format(total), 0, 1);
        tableTotal.setValueAt("Tiền giảm", 1, 0);
        tableTotal.setValueAt(decimalFormat.format(totalTienGiam), 1, 1);
        tableTotal.setValueAt("Thanh toán", 2, 0);
        tableTotal.setValueAt(decimalFormat.format(totalThanhToan), 2, 1);
        tableTotal.setValueAt("Tiền khách đưa", 3, 0);
        tableTotal.setValueAt(decimalFormat.format(totalTienKhachDua), 3, 1);
        tableTotal.setValueAt("Tiền trả lại", 4, 0);
        tableTotal.setValueAt(decimalFormat.format(totalTienTraLai), 4, 1);
        
    }
    
    private void loadDatatoTable(){
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String dbUrl = "jdbc:sqlserver://LAPTOP-1QVPM352\\MSSQLEXPRESS:1433;databaseName=CAFEACCOUNT;user=sa;password=sa2023";
            Connection con = DriverManager.getConnection(dbUrl);
            Statement s = con.createStatement();
            ResultSet rs = s.executeQuery("SELECT * FROM HoaDon");
            
            model.setRowCount(0);
            while(rs.next()){
                Object[] rowData = {
                    rs.getString("So"),
                    rs.getString("Ngay"),
                    rs.getString("NhanVienThuNgan"),
                    rs.getInt("Tong"),
                    rs.getInt("TienGiam"),
                    rs.getInt("ThanhToan"),
                    rs.getInt("TienKhachDua"),
                    rs.getInt("TienTraLai"),
                    "Chi tiết"
                };
                
                model.addRow(rowData);
            }
            calDoanhThu();
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }
    
    private void loadDatatoTableHomNay(String formattefDay){
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String dbUrl = "jdbc:sqlserver://LAPTOP-1QVPM352\\MSSQLEXPRESS:1433;databaseName=CAFEACCOUNT;user=sa;password=sa2023";
            Connection con = DriverManager.getConnection(dbUrl);
            Statement s = con.createStatement();
            ResultSet rs = s.executeQuery("SELECT * FROM HoaDon where Ngay = '" + formattefDay+"'");
            
            model.setRowCount(0);
            while(rs.next()){
                Object[] rowData = {
                    rs.getString("So"),
                    rs.getString("Ngay"),
                    rs.getString("NhanVienThuNgan"),
                    rs.getInt("Tong"),
                    rs.getInt("TienGiam"),
                    rs.getInt("ThanhToan"),
                    rs.getInt("TienKhachDua"),
                    rs.getInt("TienTraLai"),
                    "Chi tiết"
                };
                
                model.addRow(rowData);
            }
            
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }
    
    private void btnHomNayMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHomNayMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnHomNayMouseEntered

    private void btnThangNayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThangNayMouseClicked
        // TODO add your handling code here:
        SimpleDateFormat dateFormat = new SimpleDateFormat("MM");
        Date currentDay = new Date();
        String formattedDate = dateFormat.format(currentDay);
        loadDatatoTableThangNay(formattedDate);
        calDoanhThu();
    }//GEN-LAST:event_btnThangNayMouseClicked

    private void loadDatatoTableThangNay(String formattedDay){
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String dbUrl = "jdbc:sqlserver://LAPTOP-1QVPM352\\MSSQLEXPRESS:1433;databaseName=CAFEACCOUNT;user=sa;password=sa2023";
            Connection con = DriverManager.getConnection(dbUrl);
            Statement s = con.createStatement();
            ResultSet rs = s.executeQuery("SELECT * FROM HoaDon WHERE SUBSTRING(Ngay, CHARINDEX('/', Ngay) + 1, 2) = '" + formattedDay +"'");
            
            model.setRowCount(0);
            while(rs.next()){
                Object[] rowData = {
                    rs.getString("So"),
                    rs.getString("Ngay"),
                    rs.getString("NhanVienThuNgan"),
                    rs.getInt("Tong"),
                    rs.getInt("TienGiam"),
                    rs.getInt("ThanhToan"),
                    rs.getInt("TienKhachDua"),
                    rs.getInt("TienTraLai"),
                    "Chi tiết"
                };
                
                model.addRow(rowData);
            }
            
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }
    
    public void loadDatatoSanPham(String so){
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String dbUrl = "jdbc:sqlserver://LAPTOP-1QVPM352\\MSSQLEXPRESS:1433;databaseName=CAFEACCOUNT;user=sa;password=sa2023";
            Connection con = DriverManager.getConnection(dbUrl);
            Statement s = con.createStatement();
            ResultSet rs = s.executeQuery("SELECT * FROM HoaDonSanPham where So ='" + so + "'");
            
            modelDetail.setRowCount(0);
            while(rs.next()){
                Object[] rowData = {
                    rs.getString("Ten"),
                    rs.getString("SoLuong"),
                    rs.getString("DonGia"),
                    rs.getString("Tong")
                };
                
                modelDetail.addRow(rowData);
            }
            
            billDetail.setTitle("Hóa đơn số : " + so);
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }
    
    class ButtonRenderer extends JButton implements TableCellRenderer {

        public ButtonRenderer() {
            setOpaque(true);
        }

        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            setText((value == null) ? "" : value.toString());
            return this;
        }
    }

    class ButtonEditor extends DefaultCellEditor {

        protected JButton button;

        private String label;

        private boolean isPushed;

        public ButtonEditor(JCheckBox checkBox) {
            super(checkBox);
            button = new JButton();
            button.setOpaque(true);
            button.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    fireEditingStopped();
                }
            });
        }

        public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
            if (isSelected) {
                button.setForeground(table.getSelectionForeground());
                button.setBackground(table.getSelectionBackground());
            } else {
                button.setForeground(table.getForeground());
                button.setBackground(table.getBackground());
            }

            label = (value == null) ? "" : value.toString();
            button.setText(label);
            isPushed = true;
            return button;
        }

        public Object getCellEditorValue() {
            return label;
        }

        public boolean stopCellEditing() {
            isPushed = false;
            return super.stopCellEditing();
        }

        protected void fireEditingStopped() {
            super.fireEditingStopped();
        }
    }
    

    DefaultTableModel model = new DefaultTableModel(
        new Object [][] {
        },
        new String [] {
            "Số", "Ngày", "Nhân viên thu ngân", "Tổng", "Tiền giảm", "Thanh toán", "Tiên khách đưa", "Tiền trả lại", "Chi tiết"
        }
    );
    
    DefaultTableModel modelDetail = new DefaultTableModel(
        new Object [][] {
        },
        new String [] {
            "Tên", "Số lượng", "Đơn giá", "Thành tiền"
        }
    );
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog billDetail;
    private javax.swing.JPanel btnHomNay;
    private javax.swing.JPanel btnThangNay;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel pnTongQuan;
    private javax.swing.JTable tableDetail;
    private javax.swing.JTable tableTongQuan;
    private javax.swing.JTable tableTotal;
    // End of variables declaration//GEN-END:variables
}
